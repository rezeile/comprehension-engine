/* VoiceMode Styles - Using Shared Utilities */
@import '../../styles/shared.css';

/* Voice Mode Interface */
.voice-mode-interface {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: transparent;
  padding: 2rem;
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
}

.voice-mode-interface::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="rgba(255,255,255,0.03)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  pointer-events: none;
}

.voice-mode-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  max-width: 600px;
  width: 100%;
  text-align: center;
  z-index: 1;
  position: relative;
  background: var(--surface);
  border: 1px solid var(--border-subtle);
  border-radius: 16px;
  padding: 2.5rem 1.5rem;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
}

/* Voice Status Display */
.voice-status-display {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  /* Ensure consistent overall footprint */
  min-height: 88px; /* ring 38px + text + gap; keeps size stable */
}

.voice-mode-indicator {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.voice-mode-indicator p {
  color: var(--text-primary);
  font-size: 1.2rem;
  font-weight: 500;
  margin: 0;
  text-shadow: none;
}

/* Speaking Waves Animation */
.speaking-waves {
  display: flex;
  gap: 4px;
  align-items: center;
  justify-content: center;
}

.speaking-waves span {
  width: 4px;
  height: 20px;
  background: rgba(255, 255, 255, 0.8);
  border-radius: 2px;
  animation: wave 1.2s ease-in-out infinite;
}

.speaking-waves span:nth-child(1) { animation-delay: -0.4s; }
.speaking-waves span:nth-child(2) { animation-delay: -0.2s; }
.speaking-waves span:nth-child(3) { animation-delay: 0s; }
.speaking-waves span:nth-child(4) { animation-delay: 0.2s; }

@keyframes wave {
  0%, 40%, 100% {
    transform: scaleY(0.4);
    opacity: 0.6;
  }
  20% {
    transform: scaleY(1);
    opacity: 1;
  }
}

/* Transcription Feedback */
.transcription-feedback {
  width: 100%;
  max-width: 500px;
}

.transcription-display {
  background: var(--surface);
  border-radius: 16px;
  padding: 1rem 1.25rem;
  border: 1px solid var(--user-chip-border, var(--border-subtle));
  margin-bottom: 1rem;
  min-height: 80px;
  display: flex;
  align-items: center;
}

.transcription-textarea {
  color: var(--text-primary);
  font-size: 1.1rem;
  line-height: 1.6;
  margin: 0;
  text-align: left;
  width: 100%;
  min-height: 40px;
  display: flex;
  align-items: center;
  background: var(--surface);
}

.transcription-textarea:empty::before {
  content: "Start speaking...";
  color: var(--text-primary);
  font-style: normal;
  opacity: 1;
}

.interim-text {
  color: rgba(255, 255, 255, 0.7);
  font-style: italic;
}

/* Force Activate Button */
.force-activate-btn {
  background: rgba(76, 175, 80, 0.3);
  border: 2px solid rgba(76, 175, 80, 0.6);
  border-radius: 12px;
  padding: 0.75rem 1.5rem;
  color: white;
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  backdrop-filter: blur(10px);
}

.force-activate-btn:hover {
  background: rgba(76, 175, 80, 0.4);
  border-color: rgba(76, 175, 80, 0.8);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(76, 175, 80, 0.4);
}

.force-activate-btn:active {
  transform: translateY(0);
}

/* Voice Controls */
.voice-controls {
  display: flex;
  gap: 2rem;
  align-items: center;
  justify-content: center;
  margin-top: 2rem;
  z-index: 1;
  position: relative;
}

.voice-control-btn {
  background: var(--surface);
  border: 1px solid var(--border-subtle);
  border-radius: 50%;
  width: 56px;
  height: 56px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  color: var(--text-primary);
}

.voice-control-btn:hover {
  background: var(--inline-code-bg);
  border-color: var(--brand-accent);
  transform: translateY(-1px);
}

.voice-control-btn:disabled {
  opacity: 1;
  cursor: not-allowed;
  transform: none;
}

/* Close button matches slide panel close styling */
.voice-control-btn.close-btn {
  background: rgba(255, 255, 255, 0.9);
  border: 1px solid var(--border-subtle);
  color: #9aa0a6;
}

.voice-control-btn.close-btn:hover {
  background: var(--inline-code-bg);
  border-color: var(--border-subtle);
  transform: none;
}

.voice-control-btn.send-btn {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-color: transparent;
  color: #fff;
}

.voice-control-btn.send-btn:hover:not(:disabled) {
  transform: scale(1.05);
  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
}

.voice-control-btn.send-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
  .voice-mode-interface {
    padding: 1.5rem;
  }
  
  .voice-mode-content {
    gap: 1.5rem;
  }
  
  .voice-control-btn {
    width: 48px;
    height: 48px;
  }
  
  .transcription-textarea {
    padding: 1rem;
    min-height: 100px;
    font-size: 0.9rem;
  }
}

@media (max-width: 480px) {
  .voice-mode-interface {
    padding: 1rem;
  }
  
  .voice-mode-content {
    gap: 1rem;
  }
  
  .voice-control-btn {
    width: 44px;
    height: 44px;
  }
  
  .transcription-textarea {
    padding: 0.75rem;
    min-height: 80px;
    font-size: 0.85rem;
  }
  
  .voice-mode-indicator p {
    font-size: 1rem;
  }
}

/* Overlay positioning and background */
.voice-overlay {
  position: fixed;
  inset: 0;
  z-index: 50;
  pointer-events: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.08);
  backdrop-filter: blur(4px);
}

.voice-overlay .voice-mode-content {
  animation: voiceOverlayScaleIn 0.22s cubic-bezier(0.2, 0.8, 0.2, 1);
}

@keyframes voiceOverlayScaleIn {
  from { opacity: 0; transform: scale(0.98); }
  to { opacity: 1; transform: scale(1); }
}

/* Context bubbles within overlay */
.voice-context {
  width: 100%;
  max-width: var(--content-max-width);
  margin-bottom: 1rem;
  opacity: 0.55;
  max-height: 30vh;
  overflow: auto;
}

.voice-context .assistant-block,
.voice-context .user-chip {
  box-shadow: none;
  border: none;
}

.voice-context-item { margin-bottom: 12px; }

/* Mic visualizer (bars) */
.mic-visualizer {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  gap: 6px;
}

.mic-visualizer--bars span {
  width: 6px;
  height: 24px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  opacity: 1;
  border-radius: 3px;
  transform-origin: bottom center;
  animation: micBarPulse 1.2s cubic-bezier(0.2, 0.8, 0.2, 1) infinite;
}

.mic-visualizer--bars span.active { opacity: 0.9; }

@keyframes micBarPulse {
  0%, 40%, 100% { transform: scaleY(0.4); }
  20% { transform: scaleY(1); }
}

/* Remove mic-single-wave in favor of consistent ring UI */

/* AI speaking: pulsing ring */
.mic-ring {
  width: 38px;
  height: 38px;
  border-radius: 50%;
  position: relative;
}

.mic-ring::after {
  content: '';
  position: absolute;
  inset: -6px;
  border-radius: 50%;
  border: 3px solid transparent;
  animation: ringPulse 1.5s ease-in-out infinite;
}

.mic-ring--ai {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.mic-ring--ai::after {
  border-color: rgba(103, 92, 233, 0.35);
}

.mic-ring--user {
  background: linear-gradient(135deg, #f87171 0%, #ef4444 100%);
  opacity: 0.8; /* reduced by 20% */
}

.mic-ring--user::after {
  border-color: rgba(248, 113, 113, 0.35);
}

.mic-ring--neutral {
  background: var(--inline-code-bg);
}

.mic-ring--neutral::after {
  border-color: rgba(0, 0, 0, 0.12);
}

@keyframes ringPulse {
  0% { transform: scale(1); opacity: 1; }
  70% { transform: scale(1.3); opacity: 0; }
  100% { transform: scale(1.3); opacity: 0; }
}
